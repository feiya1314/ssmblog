<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="blog.mapper.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="blog.dao.UserRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="roleId" property="roleid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, roleId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="blog.dao.UserRole" >
    insert into b_user_role (id, userId, roleId
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="blog.dao.UserRole" >
    insert into b_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="blog.dao.UserRole" >
    update b_user_role
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="blog.dao.UserRole" >
    update b_user_role
    set userId = #{userid,jdbcType=INTEGER},
      roleId = #{roleid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 自定义的方法 -->
  <select id="getRoleIdListByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select roleId from b_user_role where userId=#{userId}
  </select>
  <insert id="addUserRoleList">
   insert into b_user_role (id,userId,roleId) values
   <foreach collection="roleIdList" separator="," item="item">
     (null,#{userId},#{item})
   </foreach>
  </insert>
  <delete id="deleteUserRoleList">
       DELETE FROM b_user_role WHERE userId=#{userId} AND
        roleId IN
        <foreach collection="roleIdList" index="index" item="item" open="("  separator="," close=")">
            #{item}
        </foreach>
  </delete>
  <delete id="deleteByUserIdList">
      DELETE FROM b_user_role WHERE userId in
        <foreach collection="UserIdList" index="index" item="item" open="("  separator="," close=")">
            #{item}
        </foreach>
  </delete>
</mapper>